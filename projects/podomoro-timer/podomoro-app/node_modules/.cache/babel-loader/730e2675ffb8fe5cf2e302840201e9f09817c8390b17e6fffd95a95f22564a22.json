{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKIDNA\\\\Desktop\\\\podomoro-timer\\\\podomoro-app\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes\n  const [isRunning, setIsRunning] = useState(false);\n  const [isBreak, setIsBreak] = useState(false);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    if (isRunning) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev === 0) {\n            clearInterval(intervalRef.current);\n            setIsBreak(!isBreak);\n            setTimeLeft(isBreak ? 25 * 60 : 5 * 60); // toggle between work/break\n            return isBreak ? 25 * 60 : 5 * 60;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isRunning, isBreak]);\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const handleStartPause = () => setIsRunning(prev => !prev);\n  const handleReset = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setTimeLeft(25 * 60);\n    setIsBreak(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isBreak ? 'Break Time â˜•' : 'Work Time ðŸ’¼'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-display\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartPause,\n        children: isRunning ? 'Pause' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Timer, \"iwvW2E1vlQumPjCJVXMy3y7VXxY=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Timer","_s","timeLeft","setTimeLeft","isRunning","setIsRunning","isBreak","setIsBreak","intervalRef","current","setInterval","prev","clearInterval","formatTime","time","minutes","Math","floor","seconds","toString","padStart","handleStartPause","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AKIDNA/Desktop/podomoro-timer/podomoro-app/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\nconst Timer = () => {\r\n    const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const [isBreak, setIsBreak] = useState(false);\r\n    const intervalRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (isRunning) {\r\n            intervalRef.current = setInterval(() => {\r\n                setTimeLeft((prev) => {\r\n                    if (prev === 0) {\r\n                        clearInterval(intervalRef.current);\r\n                        setIsBreak(!isBreak);\r\n                        setTimeLeft(isBreak ? 25 * 60 : 5 * 60); // toggle between work/break\r\n                        return isBreak ? 25 * 60 : 5 * 60;\r\n                    }\r\n                    return prev - 1;\r\n                });\r\n            }, 1000);\r\n        }\r\n        return () => clearInterval(intervalRef.current);\r\n    }, [isRunning, isBreak]);\r\n\r\n    const formatTime = (time) => {\r\n        const minutes = Math.floor(time / 60);\r\n        const seconds = time % 60;\r\n        return `${minutes.toString().padStart(2, '0')}:${seconds\r\n            .toString()\r\n            .padStart(2, '0')}`;\r\n    };\r\n\r\n    const handleStartPause = () => setIsRunning((prev) => !prev);\r\n    const handleReset = () => {\r\n        clearInterval(intervalRef.current);\r\n        setIsRunning(false);\r\n        setTimeLeft(25 * 60);\r\n        setIsBreak(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"timer\">\r\n            <h2>{isBreak ? 'Break Time â˜•' : 'Work Time ðŸ’¼'}</h2>\r\n            <div className=\"time-display\">{formatTime(timeLeft)}</div>\r\n            <div className=\"controls\">\r\n                <button onClick={handleStartPause}>\r\n                    {isRunning ? 'Pause' : 'Start'}\r\n                </button>\r\n                <button onClick={handleReset}>Reset</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}